{"version":3,"sources":["Context.js","components/NavBar/NavBarButtons.js","components/NavBar/NavBarButtonsMobile.js","components/NavBar/NavBar.js","components/Post/Post.js","pages/HomePage.js","pages/LoginPage.js","pages/RegisterPage.js","pages/NewPostPage.js","pages/ProfilePage.js","App.js","serviceWorker.js","index.js"],"names":["LoginContext","createContext","NavBarButtons","useContext","loggedIn","setLoggedIn","className","to","type","HomeOutlined","Fragment","UserOutlined","onClick","UserAddOutlined","useState","visible","setVisible","onClose","style","color","MenuOutlined","fontSize","title","width","closable","NavBar","alt","src","NavBarButtonsMobile","Meta","Card","Post","props","description","actions","HeartOutlined","MessageOutlined","InfoCircleOutlined","avatar","Content","Layout","Footer","HomePage","padding","maxWidth","margin","defaultCurrent","total","display","justifyContent","textAlign","Title","Typography","LoginPage","setProcessing","minHeight","name","onFinish","values","console","log","openNotification","status","notification","open","message","axios","post","then","res","data","accessToken","token","get","headers","Authorization","JSON","stringify","catch","onFinishFailed","errorInfo","Item","rules","required","prefix","placeholder","LockOutlined","warning","htmlType","RegisterPage","redirectLogin","getFieldValue","validator","rule","value","test","Promise","resolve","reject","min","TextArea","Input","Option","Select","NewPostPage","level","icon","UploadOutlined","rows","defaultValue","ProfilePage","App","Provider","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.5cbb1827.chunk.js","sourcesContent":["import {createContext} from 'react'\n\nexport const LoginContext = createContext({})","import React, {useContext} from \"react\";\nimport { Button } from \"antd\";\nimport { HomeOutlined, UserOutlined, UserAddOutlined } from \"@ant-design/icons\";\nimport \"./NavBar.css\";\nimport { Link } from \"react-router-dom\";\n\nimport {LoginContext} from \"../../Context\"\n\nfunction NavBarButtons() {\n\n  const {loggedIn, setLoggedIn} = useContext(LoginContext);\n\n  //render() {\n    return (\n      <div className=\"navContainer\">\n        <Link to=\"/\">\n          <Button type=\"text\" className=\"navButton\">\n            <HomeOutlined />\n            Početna\n          </Button>\n        </Link>\n\n        { loggedIn ? (\n          \n          <React.Fragment>\n            <Link to=\"/new\">\n              <Button type=\"text\" className=\"navButton\">\n                <UserOutlined />\n                Moja objava\n              </Button>\n            </Link>\n\n            <Link to=\"/profile\">\n              <Button type=\"text\" className=\"navButton\">\n                <UserOutlined />\n                Uredi profil\n              </Button>\n            </Link>\n\n            <Link to=\"/\">\n              <Button type=\"text\" className=\"navButton\" onClick={()=>setLoggedIn(false)}>\n                <UserOutlined />\n                Odjava\n              </Button>\n            </Link>\n          </React.Fragment>\n\n        ):(\n\n        <React.Fragment>\n          <Link to=\"/login\">\n            <Button type=\"text\" className=\"navButton\">\n              <UserOutlined />\n              Prijavi se\n            </Button>\n          </Link>\n\n          <Link to=\"/register\">\n            <Button type=\"text\" className=\"navButton\">\n              <UserAddOutlined />\n              Registriraj se\n            </Button>\n          </Link>\n        </React.Fragment>\n\n        )}\n\n\n\n      </div>\n    );\n  //}\n}\n\nexport default NavBarButtons;\n","import React, {useContext, useState} from \"react\";\nimport { Drawer, Button } from \"antd\";\nimport {\n  HomeOutlined,\n  UserOutlined,\n  UserAddOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\nimport \"./NavBar.css\";\nimport { Link } from \"react-router-dom\";\n\nimport {LoginContext} from \"../../Context\"\n\nfunction NavBarButtons() {\n\n  const {loggedIn, setLoggedIn} = useContext(LoginContext);\n\n  const[visible, setVisible] = useState(false);\n  // const[childrenDrawer, setchildrenDrawer] = useState(false);\n  \n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  //render() {\n    return (\n      <div>\n        <Button\n          className=\"navContainerMobile\"\n          type=\"text\"\n          onClick={showDrawer}\n          style={{ color: \"#fff\" }}\n        >\n          <MenuOutlined style={{ fontSize: \"24px\" }} />\n        </Button>\n        <Drawer\n          title=\"RoomSwitchr\"\n          width={200}\n          closable={true}\n          onClose={onClose}\n          visible={visible}\n        >\n          <Link to=\"/\">\n            <Button\n              type=\"text\"\n              className=\"navButtonMobile\"\n              onClick={onClose}\n            >\n              <HomeOutlined />\n              Početna\n            </Button>\n          </Link>\n\n          { loggedIn ? (\n\n          <React.Fragment>  \n            \n            <Link to=\"/new\">\n              <Button\n                type=\"text\"\n                className=\"navButtonMobile\"\n                onClick={onClose}\n              >\n                <UserOutlined />\n                Moja objava\n              </Button>\n            </Link>\n\n            <Link to=\"/profile\">\n              <Button\n                type=\"text\"\n                className=\"navButtonMobile\"\n                onClick={onClose}\n              >\n                <UserOutlined />\n                Uredi profil\n              </Button>\n            </Link>\n            \n            <Link to=\"/\">\n              <Button\n                type=\"text\"\n                className=\"navButtonMobile\"\n                onClick={() => {\n                  setLoggedIn(false);\n                  setVisible(true);\n                }}\n              >\n                <UserOutlined />\n                Odjava\n              </Button>\n            </Link>\n\n          </React.Fragment>\n\n          ):(\n\n          <React.Fragment>\n\n            <Link to=\"/login\">\n              <Button\n                type=\"text\"\n                className=\"navButtonMobile\"\n                onClick={onClose}\n              >\n                <UserOutlined />\n                Prijavi se\n              </Button>\n            </Link>\n              \n            <Link to=\"/register\">\n              <Button\n                type=\"text\"\n                className=\"navButtonMobile\"\n                onClick={onClose}\n              >\n                <UserAddOutlined />\n                Registriraj se\n              </Button>\n            </Link>\n\n          </React.Fragment>\n\n          )}\n\n        </Drawer>\n      </div>\n    );\n  //}\n}\n\nexport default NavBarButtons;\n","import React, {useContext} from \"react\";\nimport \"./NavBar.css\";\nimport { Link } from \"react-router-dom\";\nimport NavBarButtons from \"./NavBarButtons\";\nimport NavBarButtonsMobile from \"./NavBarButtonsMobile\";\n\nimport {LoginContext} from \"../../Context\"\n\nfunction NavBar() {\n\n  const {loggedIn, setLoggedIn} = useContext(LoginContext)\n  \n  // const state = {\n  //   isLoggedIn: false,\n  // };\n\n  //render() {\n    return (\n      <div className=\"nav\">\n        <img alt=\"logo\" src=\"/room.png\" className=\"navLogo\" />\n        <Link to=\"/\">\n          <span className=\"navName\">RoomSwitchr</span>\n        </Link>\n        <NavBarButtons/>\n        {/* value = {this.state.isLoggedIn}  */}\n        <NavBarButtonsMobile/>\n      </div>\n    );\n  //}\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Card, Avatar } from \"antd\";\n\nimport {\n  HeartOutlined,\n  MessageOutlined,\n  InfoCircleOutlined,\n} from \"@ant-design/icons\";\n\nconst { Meta } = Card;\n\nfunction Post(props) {\n  const title = props.title;\n  const description = props.description;\n\n  return (\n    <div>\n      <Card\n        style={{ width: \"max-width\" }}\n        actions={[\n          <HeartOutlined />,\n          <MessageOutlined />,\n          <InfoCircleOutlined />,\n        ]}\n      >\n        <Meta\n          avatar={\n            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n          }\n          title={title}\n          description={description}\n        />\n      </Card>\n      <br />\n    </div>\n  );\n}\n\nexport default Post;\n","import React from \"react\";\nimport { Layout, Pagination } from \"antd\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport Post from \"../components/Post/Post\";\n\nconst { Content, Footer } = Layout;\n\nexport default function HomePage() {\n  return (\n    <Layout className=\"layout\">\n      <NavBar />\n      <Content style={{ padding: \"0 50px\" }}>\n        <br />\n        <div\n          className=\"site-layout-content\"\n          style={{ maxWidth: \"720px\", margin: \"0 auto\" }}\n        >\n          <Post\n            title=\"Zamjena sobe na Savi, hitno\"\n            description=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque faucibus mollis enim. Donec tincidunt ullamcorper varius. Vestibulum consectetur hendrerit condimentum. Aliquam condimentum tristique arcu quis sollicitudin. In hac habitasse platea dictumst. Nam tristique auctor laoreet.\"\n          />\n          <Post\n            title=\"Mjenjam sobu na radiću\"\n            description=\"Nulla ornare, ipsum eu fringilla fermentum, tellus purus sodales ligula, vitae ultrices felis nibh condimentum arcu. In interdum faucibus sollicitudin. Fusce scelerisque scelerisque erat sit amet facilisis. Donec ullamcorper ante urna, in sodales augue feugiat vel. Donec nec dui a est sagittis euismod. \"\n          />\n          <Post\n            title=\"Lašćina, 2 kat \"\n            description=\"Curabitur molestie dui in felis placerat, in fringilla elit vehicula. Phasellus quis vulputate nunc. Praesent mollis varius pretium. Pellentesque sollicitudin efficitur justo vel cursus. Donec in risus ut tortor accumsan sagittis. Ut tristique dictum purus in condimentum. Aliquam erat volutpat. \"\n          />\n          <Post\n            title=\"Nam pharetra diam vitae\"\n            description=\"Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Interdum et malesuada fames ac ante ipsum primis in faucibus.\"\n          />\n          <Post\n            title=\"Mauris orci metus\"\n            description=\"Pellentesque arcu velit, accumsan ac nisi a, dignissim varius mauris. Fusce vel ligula nec ex pulvinar sodales malesuada commodo tortor. Proin non augue consequat, ullamcorper ipsum eget, faucibus est. \"\n          />\n\n          <Pagination\n            defaultCurrent={1}\n            total={50}\n            style={{ display: \"flex\", justifyContent: \"center\" }}\n          />\n        </div>\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>\n        PiccoloGrupa © 2020 FER PI\n      </Footer>\n    </Layout>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { Layout, Typography, message, Card, notification } from \"antd\";\nimport { Form, Input, Button } from \"antd\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { LoginContext } from \"../Context\";\n\nconst { Content, Footer } = Layout;\nconst { Title } = Typography;\n\nexport default function LoginPage() {\n  const { loggedIn, setLoggedIn } = useContext(LoginContext);\n  const [processing, setProcessing] = useState(false);\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  const onFinish = (values) => {\n    console.log(values);\n    setProcessing(true);\n    setLoggedIn(true);\n\n    const openNotification = (status) => {\n      if (status === 1) {\n        notification.open({\n          message: \"Prijava uspješna\",\n          description: \"Biti ćete prebačeni početnu stranicu\",\n        });\n      } else if (status === 0) {\n        notification.open({\n          message: \"prijava neuspješna\",\n          description: \"Molimo pokušajte ponovno\",\n        });\n      }\n    };\n\n    axios\n      .post(`https://room-switchr.herokuapp.com/api/v1/signin`, values)\n      .then((res) => {\n        console.log(res.data.accessToken);\n        let token = res.data.accessToken;\n        openNotification(1);\n\n        axios\n          .get(\"https://room-switchr.herokuapp.com/api/test/currentuser\", {\n            headers: {\n              Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n            },\n          })\n          .then((res) => {\n            notification.open({\n              message: \"Autorizacija uspješna za test api\",\n              description:\n                \"Korisnik koji pristupa api-u:\" + JSON.stringify(res.data),\n            });\n          });\n      })\n      .catch((res) => {\n        console.log(\"request failed\", res);\n        openNotification(0);\n      });\n  };\n\n  return (\n    <React.Fragment>\n      {/*loggedIn ? <Redirect to=\"/\" /> : null*/}\n      <Layout className=\"layout\" style={{ minHeight: \"100vh\" }}>\n        <NavBar />\n        <Content style={{ maxWidth: \"720px\", margin: \"auto\", padding: \"2em\" }}>\n          <Card>\n            <Title>Prijava</Title>\n            <Form\n              name=\"normal_login\"\n              className=\"login-form\"\n              onFinish={onFinish}\n              onFinishFailed={onFinishFailed}\n            >\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  { required: true, message: \"Upiši svoje korisničko ime!\" },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"Korisničko ime\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password\"\n                rules={[{ required: true, message: \"Upiši svoju lozinku!\" }]}\n              >\n                <Input\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  type=\"password\"\n                  placeholder=\"Lozinka\"\n                />\n              </Form.Item>\n              <Form.Item>\n                <p\n                  className=\"login-form-forgot\"\n                  style={{ color: \"#1890ff\" }}\n                  onClick={() => {\n                    message.warning(\n                      \"Ova funkcionalnost nije još uvijek implementirana.\"\n                    );\n                  }}\n                >\n                  Zaboravili ste lozinku?\n                </p>\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                >\n                  Prijavi se\n                </Button>\n              </Form.Item>\n            </Form>\n          </Card>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          PiccoloGrupa © 2020 FER PI\n        </Footer>\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Layout, Typography, notification } from \"antd\";\nimport { Form, Input, Button, Card } from \"antd\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst { Content, Footer } = Layout;\nconst { Title } = Typography;\n\nexport default function RegisterPage() {\n  const redirectLogin = () => {\n    console.log(\"redirecting...\");\n    return <Redirect to=\"www.google.com\" />;\n  };\n\n  const onFinish = (values) => {\n    delete values[\"confirmPassword\"];\n    console.log(values);\n    axios\n      .post(`https://room-switchr.herokuapp.com/api/v1/signup`, values) //saljemo sve valuese osim confirmPassword\n      .then((res) => {\n        console.log(\"ok\");\n        openNotification(1);\n        redirectLogin();\n      })\n      .catch((res) => {\n        openNotification(0);\n        console.log(\"request failed\", res);\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  const openNotification = (status) => {\n    if (status === 1) {\n      notification.open({\n        message: \"Registration uspješna\",\n        description: \"Biti ćete prebačeni na stranicu za prijavu\",\n      });\n    } else if (status === 0) {\n      notification.open({\n        message: \"Registration neuspješna\",\n        description: \"Molimo pokušajte ponovno\",\n      });\n    }\n  };\n\n  return (\n    <Layout className=\"layout\" style={{ minHeight: \"100vh\" }}>\n      <NavBar />\n      <Content style={{ maxWidth: \"720px\", margin: \"auto\", padding: \"2em\" }}>\n        <Card>\n          <Title>Registracija</Title>\n          <Form\n            name=\"normal_login\"\n            className=\"login-form\"\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Upiši jedinstveno korisničko ime!\",\n                },\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Korisničko ime\"\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"email\"\n              rules={[\n                { required: true, message: \"Upiši svoj Email!\" },\n                { type: \"email\", message: \"Neispravan unos email-a\" },\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Email\"\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"jmbag\"\n              rules={[\n                { required: true, message: \"Upiši svoj JMBAG!\" },\n                ({ getFieldValue }) => ({\n                  validator(rule, value) {\n                    const re = /^[0-9\\b]+$/;\n                    if (value === \"\" || re.test(value)) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\"Neispravan unos JMBAG-a!\");\n                  },\n                }),\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"JMBAG\"\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"name\"\n              rules={[{ required: true, message: \"Upiši svoje ime!\" }]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Ime i prezime\"\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Upiši svoju lozinku!\" },\n                { min: 8, message: \"Potrebno najmanje 8 znakova!\" },\n              ]}\n            >\n              <Input\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                type=\"password\"\n                placeholder=\"Lozinka\"\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"confirmPassword\"\n              rules={[\n                { required: true, message: \"Potvrdi svoju lozinku!\" },\n                ({ getFieldValue }) => ({\n                  validator(rule, value) {\n                    if (!value || getFieldValue(\"password\") === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\"Lozinke se ne podudaraju!\");\n                  },\n                }),\n              ]}\n            >\n              <Input\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                type=\"password\"\n                placeholder=\"Potvrdi lozinku\"\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n              >\n                Registriraj se\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>\n        PiccoloGrupa © 2020 FER PI\n      </Footer>\n      <Button onClick={redirectLogin}>redirect</Button>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport { Layout, Typography, Input, Select } from \"antd\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport { Button } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nconst { Content, Footer } = Layout;\nconst { Title } = Typography;\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nexport default function NewPostPage() {\n  return (\n    <Layout className=\"layout\" style={{ minHeight: \"100vh\" }}>\n      <NavBar />\n      <Content style={{ padding: \"0 50px\" }}>\n        <div\n          className=\"site-layout-content\"\n          style={{ maxWidth: \"720px\", margin: \"0 auto\" }}\n        >\n          <Title>Nova Objava</Title>\n          <Title level={3}>Slika</Title>\n          <Button icon={<UploadOutlined />}>Click to Upload</Button>\n          <Title level={3}>Naslov</Title>\n          <Input placeholder=\"Naslov\" />\n          <Title level={3}>Opis</Title>\n          <TextArea rows={4} placeholder=\"Opis\" />\n          <Title level={3}>Dom</Title>\n\n          <Select defaultValue=\"lucy\" style={{}}>\n            <Option value=\"jack\">Zagreb Stjepan Radić</Option>\n            <Option value=\"lucy\">Zagreb Cvjetno</Option>\n            <Option value=\"Yiminghe\">Zagreb 3</Option>\n          </Select>\n        </div>\n      </Content>\n\n      <Footer style={{ textAlign: \"center\" }}>\n        PiccoloGrupa © 2020 FER PI\n      </Footer>\n    </Layout>\n  );\n}\n","import React from \"react\";\n\nexport default function ProfilePage() {\n    \n    return (\n        <div className='row'>\n            hello\n        </div>\n    );\n    \n}","import React, {  useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport HomePage from \"./pages/HomePage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport NewPostPage from \"./pages/NewPostPage\";\nimport ProfilePage from \"./pages/ProfilePage\";\n\n// import objaveService from './services/ObjaveService';\n\nimport {LoginContext} from \"./Context\"\n\nexport default function App(){\n  // state = {\n  //   objave: []\n  // };\n\n  // componentDidMount(){\n  //     objaveService.getObjave().then((res) => {\n  //     this.setState({ objave: res.data})\n  //   });\n  // }\n\n  //render() {\n    const [loggedIn, setLoggedIn] = useState(false);\n    const App = () => (\n      <div>\n        <LoginContext.Provider value={{loggedIn, setLoggedIn}}>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/register\" component={RegisterPage} />\n          <Route exact path=\"/new\" component={NewPostPage} />\n          <Route exact path=\"/profile\" component={ProfilePage} />\n        </LoginContext.Provider>\n      </div>\n    );\n    return (\n      <Switch>\n        <App />\n      </Switch>\n    );\n  //}\n}\n\n//export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}